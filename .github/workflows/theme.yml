name: Theme
on:
  workflow_call:

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build Theme
    runs-on: ${{ (github.event.act || !github.event.repository.private) && 'ubuntu-latest' || format('runs-on={0}/runner=sw-amd64', github.run_id) }}
    steps:
      - uses: runs-on/action@cd2b598b0515d39d78c38a02d529db87d2196d1e # v2.0.3
      - uses: actions/checkout@v5

      - name: Build Theme
        uses: shopware/github-actions/build-zip@main
        env:
          NODE_OPTIONS: "--openssl-legacy-provider"
        with:
          extensionName: '${{ github.event.repository.name }}'

  install:
    name: Test Theme installation
    runs-on: ${{ (github.event.act || !github.event.repository.private) && 'ubuntu-latest' || format('runs-on={0}/runner=sw-amd64', github.run_id) }}
    needs:
      - build
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
          MYSQL_DATABASE: shopware
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
        volumes:
          - /dev/shm/mysql:/var/lib/mysql
    steps:
      - uses: runs-on/action@cd2b598b0515d39d78c38a02d529db87d2196d1e # v2.0.3
      - name: Setup and Install Theme
        uses: shopware/github-actions/setup-extension@main
        with:
          mysqlVersion: 'skip'
          install: 'true'
          env: 'prod'
          extensionName: '${{ github.event.repository.name }}'
          extension-zip: '${{ github.event.repository.name }}.zip'

      - name: Validate Snippets
        run: |-
          bin/console snippets:validate

  should_test_jest:
    name: Determine whether to run Jest tests
    runs-on: ${{ (github.event.act || !github.event.repository.private) && 'ubuntu-latest' || format('runs-on={0}/runner=sw-amd64', github.run_id) }}
    outputs:
      test_jest: ${{ steps.should_run.outputs.test_jest }}
    steps:
      - uses: runs-on/action@cd2b598b0515d39d78c38a02d529db87d2196d1e # v2.0.3
      - uses: actions/checkout@v5

      - name: Determine whether to run Jest tests
        id: should_run
        run: |-
          echo "test_jest=${{ hashFiles('Resources/app/storefront/package-lock.json') != '' && hashFiles('Resources/app/storefront/jest.config.*') != '' }}" >> ${GITHUB_OUTPUT}

  test_jest:
    name: Unit tests (Jest)
    runs-on: ${{ (github.event.act || !github.event.repository.private) && 'ubuntu-latest' || format('runs-on={0}/runner=sw-amd64', github.run_id) }}
    needs:
      - should_test_jest
    if: ${{ needs.should_test_jest.outputs.test_jest == 'true' }}
    env:
      STOREFRONT_PATH: "Resources/app/storefront"
    steps:
      - uses: runs-on/action@cd2b598b0515d39d78c38a02d529db87d2196d1e # v2.0.3
      - uses: actions/checkout@v5

      - name: Execute Jest tests
        working-directory: ${{ env.STOREFRONT_PATH }}
        run: |-
          npm ci --no-audit --prefer-offline
          
          # shellcheck disable=SC2046
          $(npm bin)/jest --config jest.config.js --ci
