name: PHPUnit
on:
  workflow_call:
    inputs:
      extensionName:
        description: "Your extension name"
        required: true
        type: string
      shopwareVersion:
        description: |
          With the default `.auto`, the workflow tries to find a shopware version using the shopware-version action.

          For example, if the current ref is next-1234, it will try to find the ref next-1234 in shopware/shopware. If there's no matching ref, it will use shopwareVersionFallback
        required: false
        type: string
        default: ".auto"
      shopwareVersionFallback:
        required: false
        type: string
        default: trunk
      shopware-repository:
        description: The shopware repository to checkout
        type: string
        default: shopware/shopware
      phpVersion:
        required: false
        type: string
        default: "8.2"
      mysqlVersion:
        required: false
        type: string
        default: "builtin"
      composerRootVersion:
        required: false
        type: string
        default: ".auto"
      dependencies:
        required: false
        type: string
      uploadCoverage:
        description: "Upload coverage to codecov"
        required: false
        type: boolean
        default: false
    secrets:
      codecovToken:
        description: "Codecov token"
        required: false
      env:
        description: "ENV variables to substitute in to plugin repository urls"
        required: false

jobs:
  run:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: shopware/github-actions/shopware-version@main
        with:
          fallback: ${{ inputs.shopwareVersionFallback }}
          repo: ${{ inputs.shopware-repository }}
        id: version
        if: ${{ inputs.shopwareVersion == '.auto' }}
      - name: Setup Shopware
        uses: shopware/setup-shopware@main
        with:
          shopware-version: ${{ steps.version.outputs.shopware-version || inputs.shopwareVersion }}
          shopware-repository: ${{ inputs.shopware-repository }}
          php-version: ${{ inputs.phpVersion }}
          mysql-version: ${{ inputs.mysqlVersion }}
          composer-root-version: ${{ inputs.composerRootVersion }}
          php-extensions: pcov
      - name: Clone Extension
        uses: actions/checkout@v4
        with:
          path: custom/plugins/${{ inputs.extensionName }}
      - name: Clone Dependencies
        if: inputs.dependencies
        env:
          DEPS: ${{ inputs.dependencies }}
        run: |
          IFS=$'\n'
          for token in $(echo "${{secrets.env}}"); do
            export $token
          done
          for dep in $(echo "$DEPS" | envsubst | jq -c '.[]'); do
            dep_name=$(echo "$dep" | jq -r '.name')
            dep_repo=$(echo "$dep" | jq -r '.repo')
            git clone "$dep_repo" "custom/plugins/$dep_name"
          done
      - name: Install extension with Composer
        run: composer require $(composer -d custom/plugins/${{ inputs.extensionName }} config name)
      - name: Run PHPUnit
        working-directory: custom/plugins/${{ inputs.extensionName }}
        run: ${{ github.workspace }}/vendor/bin/phpunit --coverage-clover clover.xml
      - name: Upload Coverage
        if: inputs.uploadCoverage == true
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.codecovToken }}
        with:
          root_dir: ${{ github.workspace }}/custom/plugins/${{ inputs.extensionName }}
          working-directory: ${{ github.workspace }}/custom/plugins/${{ inputs.extensionName }}
          files: ./clover.xml
